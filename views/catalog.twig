{% extends "html.twig" %}
{% set title = "catalog" %}

{% block content %}
{% import "./_macros.twig" as utils %}
<div class="d-flex flex-column gap-1">
<div class="d-flex flex-row flex-wrap ai-center gap-3">
  <h2>{{ t.catalog.catalog }}</h2>
  <div class="d-flex flex-row flex-wrap gap-2 ms-auto w-autoto100-sm">
  {% include '/components/pagination.twig' with {params: req.query, page: page, queries: items, totalpages: pages, classes: "jc-center"} %}
  <div class="d-flex flex-row pillify flex-grow-1" style="width: 25em;">
  <input name="q" class="w-100 shadowless" placeholder="{{ t.catalog.search }}" value="{{ req.query.q|e }}" onkeydown="search_onkeyup(this)" id="catalog-search" type="search">
  <button class="shadowless" onclick="search_onkeyup($('#catalog-search'), true)"><h5 class="bi bi-search"></h5></button>
  </div>
  <div class="pos-relative">
    <button onclick="dropdownify(this, $('#filterresults'));"><h4 class="bi bi-filter"></h4></button>
    <div class="pos-absolute dropdownify mt-1 card d-flex flex-column gap-3" style="width: 14em; z-index: 2;" id="filterresults">
      {% include '/components/query_btns.twig' with {urlparams: req.query, keyparam: "order", valueparam: "ASC", text: t.filter.order_by_ascending} %}
      {% include '/components/query_btns.twig' with {urlparams: req.query, keyparam: "order", valueparam: "DESC", text: t.filter.order_by_descending} %}
      <hr class="mt-1 mb-1">
      {% include '/components/query_btns.twig' with {urlparams: req.query, keyparam: "sort", valueparam: "random", text: "sort by " ~ "<b>random</b>"} %}
      {% for name, column in sorts %}
      {% include '/components/query_btns.twig' with {urlparams: req.query, keyparam: "sort", valueparam: column, text: "sort by " ~ "<b>" ~ name ~ "</b>"} %}
      {% endfor %}
    </div>
  </div>
  </div>
</div>
<hr class="mt-3 mb-2">
<div class="d-flex flex-row flex-wrap gap-3">
  <div class="d-flex flex-column gap-2" style="flex-basis: 12.5em; flex-grow: 1; flex-shrink: 1;">
  <div class="p-2 border-light-1 round-4 d-flex flex-column gap-1">
    {%- macro generate_category(category, category_key) %}
    <div class="pos-relative">
      <div onclick="openify(this, elem('#catalog-content-{{ category_key }}'), elems('[id^=\'catalog-content-\']'))" class="c-pointer d-flex flex-row px-2 py-2">
        <span>{{ category }}</span>
        <i class="bi bi-caret-right-fill ms-auto"></i>
      </div>
      <div style="left: 100%; top: 0; overflow : auto; z-index: 2; width: 12em;" id="catalog-content-{{ category_key }}" class="openify card pos-absolute d-flex flex-column gap-1">
      {% include '/components/query_btns.twig' with {classes: "py-2", urlparams: req.query, keyparam: "type", valueparam: category_key, text: "all " ~ category} %}
      {% for name, column in catalog_types[category_key]|sort %}
        {% include '/components/query_btns.twig' with {classes: "py-2", urlparams: req.query, keyparam: "type", valueparam: column, text: t.catalog.types[category_key][name]} %}
      {% endfor %}
      </div>
    </div>
    {% endmacro -%}
    {% import _self as self %} {# twig hack #}
    {% include '/components/query_btns.twig' with {classes: "px-2 py-2", urlparams: req.query, keyparam: "type", valueparam: "", text: "all types"} %}
    <hr class="my-2" nomargin>
    {{ self.generate_category("clothing", "clothing") }}
    {{ self.generate_category("body parts", "body_parts") }}
    {% include '/components/query_btns.twig' with {classes: "px-2 py-2", urlparams: req.query, keyparam: "type", valueparam: (ENUM.assets.Gear), text: "gear"} %}
    {{ self.generate_category("accessories", "accessories") }}
    {{ self.generate_category("animations", "animations") }}
  </div>
  </div>

  <div style="flex-basis: 25em; flex-grow: 25; {% if items|length == 0 %}margin: auto;{% endif %}">
  {% if items|length == 0 %}
    <div class="d-flex flex-column ai-center gap-2 p-3">
    <h1 style="font-size: 4em;" class="bi bi-egg-fried"></h1>
    <h4>no items found</h4>
    <small class="text-muted">heres a fried egg for you</small>
    </div>
  {% else %}
    <div class="d-grid gap-4" style="grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));">
      {% for item in items %}
        {% include '/components/item_default.twig' with {item: item} %}
      {% endfor %}
    </div>
  {% endif %}
  </div>
</div>
</div>
{% endblock %}